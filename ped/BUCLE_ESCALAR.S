;
; Título:		BUCLE_ESCALAR.S
; Tarea:		Prueba de Evaluación a Distancia - apartado a) 
; Asignatura:	Ingeniería de Computadores II
; Curso:		2020-21
; Alumno:		Sergio Flor García
; E-mail:		sflor5@alumno.uned.es
;

; Asignación de posiciones de memoria:
           .data 0x1000
		   
X:         .double 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0		   ;Vector X
           .double 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0
           .double 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0
           .double 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0
           .double 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0
		   .double 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0
		   .double 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 
		   .double 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0
		   .double 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0
		   .double 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0
		   .double 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0
		   .double 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0
		   .double 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0
		   .double 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0
		   .double 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0
		   .double 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0
		   .double 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0
		   .double 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0
		   .double 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0
		   .double 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0
		   .double 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0
		   .double 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0
		   .double 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0
		   .double 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0
		   

Y:         .double 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0		   ;Vector Y
           .double 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0
           .double 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0
           .double 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0
           .double 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0
		   .double 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0
		   .double 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 
		   .double 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0
		   .double 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0
		   .double 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0
		   .double 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0
		   .double 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0
		   .double 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0
		   .double 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0
		   .double 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0
		   .double 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0
		   .double 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0
		   .double 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0
		   .double 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0
		   .double 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0
		   .double 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0
		   .double 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0, 175.0
		   .double 176.0, 177.0, 178.0, 179.0, 180.0, 181.0, 182.0, 183.0
		   .double 184.0, 185.0, 186.0, 187.0, 188.0, 189.0, 190.0

a:         .double 2.0    ;Escalar a

           .text
main:      ADDI  R1,R0,0x1000       ; carga la dirección de X en R1
           ADDI  R2,R0,0x15F0       ; carga la dirección de Y en R2
           LD    F0,0x1BE0(R0)      ; carga la dirección del escalar en F0
           ADDI  R4,R1,0x5F0        ; 190 elementos son 1520 bytes(0x5F0)
inicio:    LD    F2,#0(R1)          ; carga X(i) 
           MULTD F4,F2,F0           ; multiplica a*X(i) 
           LD    F6,#0(R2)          ; carga Y(i) 
           ADDD  F6,F4,F6           ; suma a*X(i)+Y(i)
           SD    #0(R2),F6          ; almacena Y(i)
           ADDI  R1,R1,#8           ; incrementa índice X
           ADDI  R2,R2,#8           ; incremente índice Y
           SGT   R3,R1,R4           ; test por si finalizado
           BEQZ  R3,inicio          ; bucle si no finalizad

fin:       trap 6                   ; Fin del programa
	    
